Number Orders Backlog You given integer array orders where each orders denotes amounti orders have been placed type orderTypei price pricei orderTypei if it batch buy orders if it batch sell orders Note orders represents batch amounti independent orders with same price order type All orders represented by orders will be placed before all orders represented by orders for all valid There backlog consists orders have not been executed backlog initially empty When order placed following happens If order buy order you look sell order with smallest price backlog If sell orders price smaller than equal current buy orders price they will match be executed sell order will be removed from backlog Else buy order added backlog Vice versa if order sell order you look buy order with largest price backlog If buy orders price larger than equal current sell orders price they will match be executed buy order will be removed from backlog Else sell order added backlog Return total amount orders backlog after placing all orders from input Since this number can be large return it modulo Example Input orders Output Explanation Here what happens with orders orders type buy with price placed There no sell orders so orders added backlog orders type sell with price placed There no buy orders with prices larger than equal so orders added backlog order type sell with price placed There no buy orders with prices larger than equal backlog so this order added backlog orders type buy with price placed first orders matched with sell orders least price which these sell orders removed from backlog rd order matched with sell order least price which this sell order removed from backlog Then there no more sell orders backlog so th order added backlog Finally backlog has buy orders with price buy order with price So total number orders backlog Example Input orders Output Explanation Here what happens with orders orders type sell with price placed There no buy orders so orders added backlog orders type buy with price placed They matched with sell orders with least price which those sell orders removed from backlog orders type buy with price placed least price sell order so orders added backlog order type sell with price placed It matched with buy order highest price which buy order removed from backlog Finally backlog has sell orders with price buy orders with price So total number orders which equal Constraints orderslength orderslength pricei amounti orderTypei either