Design Graph With Shortest Path Calculator There directed weighted graph consists nodes numbered from edges graph initially represented by given array edges where edges meaning there edge from fromi toi with cost edgeCosti Implement Graph class Graphint int edges initializes object with nodes given edges addEdgeint edge adds edge list edges where edge It guaranteed there no edge between two nodes before adding this one int shortestPathint node int node returns minimum cost path from node node If no path exists return cost path sum costs edges path Example Input Output Explanation Graph new Graph gshortestPath return shortest path from first diagram above with total cost gshortestPath return There no path from gaddEdge We add edge from node node we get second diagram above gshortestPath return shortest path from now with total cost Constraints edgeslength edgeslength edgelength fromi toi from node node edgeCosti edgeCost There no repeated edges no selfloops graph any point most calls will be made for addEdge most calls will be made for shortestPath