Booking Concert Tickets Groups concert hall has rows numbered from each with seats numbered from You need design ticketing system can allocate seats following cases If group spectators can sit together row If every member group spectators can get seat They may may not sit together Note spectators very picky Hence They will book seats only if each member their group can get seat with row number less than equal maxRow maxRow can vary from group group case there multiple rows choose from row with smallest number chosen If there multiple seats choose same row seat with smallest number chosen Implement BookMyShow class BookMyShowint int Initializes object with as number rows as number seats per row int gatherint int maxRow Returns array length denoting row seat number respectively first seat being allocated members group who must sit together other words it returns smallest possible such all seats valid empty row maxRow Returns case it not possible allocate seats group boolean scatterint int maxRow Returns true if all members group can be allocated seats rows maxRow who may may not sit together If seats can be allocated it allocates seats group with smallest row numbers smallest possible seat numbers each row Otherwise returns false Example Input Output true false Explanation BookMyShow bms new BookMyShow There rows with seats each bmsgather return group books seats row bmsgather return There only seat left row so it not possible book consecutive seats bmsscatter return True group books seat row seats row bmsscatter return False There only one seat left hall Constraints maxRow most calls total will be made gather scatter