Design Skiplist Design Skiplist without using any builtin libraries skiplist data structure takes Ologn time add erase search Comparing with treap redblack tree which has same function performance code length Skiplist can be comparatively short idea behind Skiplists just simple linked lists For example we have Skiplist containing we want add into it Skiplist works this way Artyom Kalinin via Wikimedia Commons You can see there many layers Skiplist Each layer sorted linked list With help top layers add erase search can be faster than On It can be proven average time complexity for each operation Ologn space complexity On See more about Skiplist httpsenwikipediaorgwikiSkip_list Implement Skiplist class Skiplist Initializes object skiplist bool searchint target Returns true if integer target exists Skiplist false otherwise void addint num Inserts value num into SkipList bool eraseint num Removes value num from Skiplist returns true If num does not exist Skiplist do nothing return false If there exist multiple num values removing any one them fine Note duplicates may exist Skiplist your code needs handle this situation Example Input Output Explanation Skiplist skiplist new Skiplist skiplistadd skiplistadd skiplistadd skiplistsearch return False skiplistadd skiplistsearch return True skiplisterase return False not skiplist skiplisterase return True skiplistsearch return False has already been erased Constraints num target most calls will be made search add erase