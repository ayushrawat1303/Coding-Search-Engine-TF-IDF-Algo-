Implement Queue using Stacks Implement first first out FIFO queue using only two stacks implemented queue should support all functions normal queue push peek pop empty Implement MyQueue class void pushint Pushes element back queue int pop Removes element from front queue returns it int peek Returns element front queue boolean empty Returns true if queue empty false otherwise Notes You must use only standard operations stack which means only push top peekpop from top size empty operations valid Depending on your language stack may not be supported natively You may simulate stack using list deque doubleended queue as long as you use only stacks standard operations Example Input Output Explanation MyQueue myQueue new MyQueue myQueuepush queue myQueuepush queue leftmost front queue myQueuepeek return myQueuepop return queue myQueueempty return false Constraints most calls will be made push pop peek empty All calls pop peek valid Followup Can you implement queue such each operation amortized time complexity other words performing operations will take overall On time even if one those operations may take longer