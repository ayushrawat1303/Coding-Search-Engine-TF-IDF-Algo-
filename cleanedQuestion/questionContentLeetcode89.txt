Binary Search Tree Iterator Implement BSTIterator class represents iterator over inorder traversal binary search tree BST BSTIteratorTreeNode root Initializes object BSTIterator class root BST given as part constructor pointer should be initialized nonexistent number smaller than any element BST boolean hasNext Returns true if there exists number traversal right pointer otherwise returns false int next Moves pointer right then returns number pointer Notice by initializing pointer nonexistent smallest number first call next will return smallest element BST You may assume next calls will always be valid there will be least next number inorder traversal when next called Example Input Output Explanation BSTIterator bSTIterator new BSTIterator bSTIteratornext return bSTIteratornext return bSTIteratorhasNext return True bSTIteratornext return bSTIteratorhasNext return True bSTIteratornext return bSTIteratorhasNext return True bSTIteratornext return bSTIteratorhasNext return False Constraints number nodes tree range Nodeval most calls will be made hasNext next Follow up Could you implement next hasNext run average time use Oh memory where height tree