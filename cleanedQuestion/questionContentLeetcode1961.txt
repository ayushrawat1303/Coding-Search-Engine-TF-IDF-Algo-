Design Cancellable Function Sometimes you have long running task you may wish cancel it before it completes help with this goal write function cancellable accepts generator object returns array two values cancel function promise You may assume generator function will only yield promises It your functions responsibility pass values resolved by promise back generator If promise rejects your function should throw error back generator If cancel callback called before generator done your function should throw error back generator error should be string Cancelled Not Error object If error was caught returned promise should resolve with next value was yielded returned Otherwise promise should reject with thrown error No more code should be executed When generator done promise your function returned should resolve value generator returned If however generator throws error returned promise should reject with error example how your code would be used function tasks const val yield new Promiseresolve resolve yield new Promiseresolve setTimeoutresolve return val calculation shouldnt be done const cancellabletasks setTimeoutcancel promisecatchconsolelog logs Cancelled tms If instead cancel was not called was called after tms promise would have resolved Example Input generatorFunction function return cancelledAt Output resolved Explanation const generator generatorFunction const cancellablegenerator setTimeoutcancel promisethenconsolelog resolves tms generator immediately yields finishes Because returned promise immediately resolves Note cancelling finished generator does nothing Example Input generatorFunction function const msg yield new Promiseres resHello throw Error msg cancelledAt null Output rejected Error Hello Explanation promise yielded function handles this by waiting for it resolve then passes resolved value back generator Then error thrown which has effect causing promise reject with same thrown error Example Input generatorFunction function yield new Promiseres setTimeoutres return Success cancelledAt Output rejected Cancelled Explanation While function waiting for yielded promise resolve cancel called This causes error message be sent back generator Since this error uncaught returned promise rejected with this error Example Input generatorFunction function let result yield new Promiseres setTimeoutres result yield new Promiseres res yield new Promiseres setTimeoutres result yield new Promiseres res return result cancelledAt null Output resolved Explanation promises yielded Two those promises have their values added result After ms generator finishes with value value resolved by returned promise Example Input generatorFunction function let result try yield new Promiseres setTimeoutres result yield new Promiseres res yield new Promiseres setTimeoutres result yield new Promiseres res catche return result return result cancelledAt Output resolved Explanation first two yielded promises resolve cause result increment However tms generator cancelled error sent generator caught result returned finally resolved by returned promise Example Input generatorFunction function try yield new Promiseresolve reject rejectPromise Rejected catche let yield new Promiseresolve resolve let yield new Promiseresolve resolve return cancelledAt null Output resolved Explanation first yielded promise immediately rejects This error caught Because generator hasnt been cancelled execution continues as usual It ends up resolving Constraints cancelledAt null cancelledAt generatorFunction returns generator object